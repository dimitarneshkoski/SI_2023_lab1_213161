 1)/
 2)/
 3)/
 4) mkdir SI_2023_lab1_213161 => 
    cd SI_2023_lab1_213161 => 
    git init (креирање на директориум и иницијализација на Git).

 5) git remote add origin https://github.com/dimitarneshkoski/SI_2023_lab1_213161.git (поврзување на локалното репо со оддалеченото репо).

 6) nano README.md =>  
    git add README.md =>  
    git commit -m "Initial commit" (креирање и пополнување на README, додавање од untracked на сцена/staged, commit со "Initial commit" порака).

 7) nano SILab1.java =>
    git add SILab1.java =>
    git commit -m "Add java class" (креирање и пополнување на SILab1.java, додавање од untracked на сцена/staged, commit со "Add java class" порака).
 
 8) git push --all origin (синхронизација на сите гранки со оддалечениот репозиториум).

 9) git branch bug1 => git branch bug2 => git branch bug3 (креирање на три нови bug гранки разгранети од мастер гранката).

10) git checkout bug1 (префрлање од гранката master на гранката bug1).

11) nano SILab1.java => 
    git add SILab1.java =>
    git commit -m "Fix wrong loop for reading" (поправка на грешката = наместо <=, додавање од modified на сцена/staged, commit со "Fix wrong loop for reading" порака).

12) git checkout bug2 (префрлање од гранката bug1 на гранката bug2).

13) nano SILab1.java => 
    git add SILab1.java =>
    git commit -m "Fix wrong condition in filterOddNumbers" (поправка на грешката != наместо ==, додавање од modified на сцена/staged, commit со "Fix wrong condition in filterOddNumbers" порака).   

14) git checkout bug3 (префрлање од гранката bug2 на гранката bug3).

15) nano SILab1.java => 
    git add SILab1.java =>
    git commit -m "Fix method sumEvenNumbers" (поправка на грешката += наместо *=, додавање од modified на сцена/staged, commit со "Fix method sumEvenNumbers" порака).

16) git push --all origin (синхронизација на сите гранки со оддалечениот репозиториум/origin).

17) git checkout master (префрлање од гранката bug3 на master).

18) git merge bug1 (спојување на bug1 сo master, употребена стратегија fast-forward, без конфликти).

19) git push --all origin (синхронизација на сите гранки со оддалечениот репозиториум/origin).

20) git merge bug2 (спојување на bug2 со master, употребена е стратегија ort (recursive), без конфликти).

21) git push --all origin (синхронизација на сите гранки со оддалечениот репозиториум/origin).

22) git checkout bug3 (префрлање од гранката master на bug3).

23) git rebase master (направен rebase од гранката bug3 спрема гранката master).

24) git checkout master (префрлање од гранката bug3 на master).

25) git merge bug3 (спојување на bug3 со master, употребена е стратегија fast-forward, без конфликти).

26) git push --force --all origin (синхронизација на сите гранки со оддалечениот репозиториум/origin со дополнителна употреба на flag --force/принудна синхронизација за bug3).

27) nano logs.txt =>
    nano 213161.txt =>
    git add . =>
    git commit -m "Final commit" (креирање и пополнување на logs.txt i 213161.txt, додавање од untracked на сцена/staged, commit со порака "Final commit").

28) git push --all origin (синхронизација на сите гранки со оддалечениот репозиториум/origin).    
